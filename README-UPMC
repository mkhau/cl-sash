Notes :
3) Il est possible que parfois, $HOME (ou autres) ne s'expanse pas bien pour cause apparemment de caractères cachés. Mais recommencer avec les mêmes arguments peut parfois donner les résultats attendus.

4) Expression = 
	Expression OpPlusMoins Expression
	| Expression OpFoisDiv Expression
	| Constante
	| Erreur

5) Diviser par zéro donne une erreur, NaN. Mettre une expression qui ne commence pas par un  chiffre donne NaN aussi, et mettre une expression qui commence par un chiffre et qui contiendrait des lettres fait qu'on prend la première chaine constituée uniquement de chiffres en ignorant le reste. -echo ${12ab34} donne 12.

Noter que parce que ça fait des erreurs bizarres et que je n'ai pas compris comment ne pas regarder les wildcards dans une expression, on utilise des {} pour délimiter au lieu de [] et x au lieu de *. Ainsi, -echo ${1+2x3} donne bien 7. -arith '2x9+1x7' donne 25, et -arith '1+1' '2+2' 3-1' '9/0' donne bien 2 4 2 NaN

En revanche, le programme ne traite pas encore les nombres négatifs. -arith '3x-1' donne NaN, et -arith '3-3-63' donne '3- -60' => 63, tandis que -arith '3-63-3' donne '3 - 60' => -57. Le programme ne traite pas non plus les variables d'environnement, comme -arith '$DEUX' qui ressort NaN et -echo ${$DEUX} qui segfault.

6)Traitement des chaines de caractères :

Implémentation de + :
-arith '"chaine1"+"chaine2"' donne
"chaine1chaine2"

Il ne doit pas y avoir d'espace entre les guillemets et les +. Toute tentative d'ajouter autre chose que des chaines de caractères entre guillemets fera appel à la fonction arith normale et renverra NaN ou la chaine "Guillemet Manquant". Si la chaine initiale ne commence pas et ne termine pas par des '"', alors la fonction arith "normale" sera utilisée au lieu de l'arith qui compare les chaines de caractère. Le choix de quelle fonction utiliser est déterminé à chaque nouvel argument.

De ce fait, trois choses provoquent des erreurs ou un résultat incorrect : le caractère +, les caractères " et ', et la chaine "Guillemet manquant". (plus le caractère '=' avec l'implémentation suivante)

exemples : 

> -arith '"abcd"+"efgh"' '"3.415"+"9265"' '1+2' '"Hello "+"World"+" !"'
"abcdefgh" " 3 "Hello World !"
> -arith '"a"+"b"' '1+1' '"12"+"24"' '12+24'
"ab" 2 "1224" 36
> -arith '"12"+34'
NaN
> -arith '"12"+"34'
NaN
> -arith '"12"+34"'
Guillemet manquant


(ceci dit, pour une raison qui m'échappe totalement, 
> -arith '"3.14"+"16"' '3+16'
"3.1416" "
le deuxième argument est traité de manière très étrange.)

Implémentation de =:

arith peut comparer deux chaines de caractère pour savoir si elles sont identiques. Même syntaxe que le +.
La chaine rend TRUE si les chaines sont identiques et FALSE sinon. Evidemment, on peut additionner deux chaines de caractère avant de les comparer.

> -arith '1+1' '"1-"+"1"' '"1-1"="1-"+"1"' '"3.14"="3.1415"'
2 "1-1" TRUE FALSE

Noter que, comme "Guillemet manquant" est une chaine aussi, comparer deux erreurs de guillemets peut entrainer un résultat TRUE.
> -arith '"12"+34"="56"+78"'
TRUE






   	
